{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/the_big_quiz/src/components/Score.jsx\";\nimport React from \"react\";\nimport \"../App.css\";\nimport { convertTime } from \"./convertTime.js\";\n\nfunction Score(props) {\n  let scores = props.gameParameters.score;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, scores // Tri par temps de réponse\n  .sort((playerA, playerB) => {\n    return playerA.answers.map(answer => answer.duration).reduce((acc, val) => acc + val) - playerB.answers.map(answer => answer.duration).reduce((acc, val) => acc + val);\n  }) // Tri par nombre de bonnes réponses / nombre de réponses\n  .sort((playerA, playerB) => {\n    return playerB.answers.filter(answer => answer.correctAnswer).length / playerB.answers.length - playerA.answers.filter(answer => answer.correctAnswer).length / playerA.answers.length;\n  }) // map des joueurs\n  .map((player, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Container\",\n    key: player.playerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scoreContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"playerName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, i + 1, \" - \", player.playerName), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"playerScore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, player.answers.filter(answer => answer.correctAnswer).length, \"/\", player.answers.length, \" - \", Math.floor(player.answers.filter(answer => answer.correctAnswer).length / player.answers.length * 10000) / 100 + \" %\"), props.gameParameters.timerParameter > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, \"total time:\", \" \", convertTime(player.answers.map(answer => answer.duration).reduce((acc, val) => acc + val)))) : \"\", props.gameParameters.timerParameter > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"average time:\", \" \", convertTime(player.answers.map(answer => answer.duration).reduce((acc, val) => acc + val) / player.answers.length))) : \"\")))));\n}\n\nexport default Score;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/the_big_quiz/src/components/Score.jsx"],"names":["React","convertTime","Score","props","scores","gameParameters","score","sort","playerA","playerB","answers","map","answer","duration","reduce","acc","val","filter","correctAnswer","length","player","i","playerName","Math","floor","timerParameter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nimport { convertTime } from \"./convertTime.js\";\n\nfunction Score(props) {\n  let scores = props.gameParameters.score;\n  return (\n    <div>\n      <div>\n        {scores\n          // Tri par temps de réponse\n          .sort((playerA, playerB) => {\n            return (\n              playerA.answers\n                .map((answer) => answer.duration)\n                .reduce((acc, val) => acc + val) -\n              playerB.answers\n                .map((answer) => answer.duration)\n                .reduce((acc, val) => acc + val)\n            );\n          })\n          // Tri par nombre de bonnes réponses / nombre de réponses\n          .sort((playerA, playerB) => {\n            return (\n              playerB.answers.filter((answer) => answer.correctAnswer).length /\n                playerB.answers.length -\n              playerA.answers.filter((answer) => answer.correctAnswer).length /\n                playerA.answers.length\n            );\n          })\n          // map des joueurs\n          .map((player, i) => (\n            <div className=\"Container\" key={player.playerName}>\n              <div className=\"scoreContainer\">\n                <p className=\"playerName\">\n                  {i + 1} - {player.playerName}\n                </p>\n                <p className=\"playerScore\">\n                  {\n                    player.answers.filter((answer) => answer.correctAnswer)\n                      .length\n                  }\n                  /{player.answers.length}\n                  {\" - \"}\n                  {Math.floor(\n                    (player.answers.filter((answer) => answer.correctAnswer)\n                      .length /\n                      player.answers.length) *\n                      10000\n                  ) /\n                    100 +\n                    \" %\"}\n                </p>\n                {props.gameParameters.timerParameter > 0 ? (\n                  <p>\n                    <b>\n                      total time:{\" \"}\n                      {convertTime(\n                        player.answers\n                          .map((answer) => answer.duration)\n                          .reduce((acc, val) => acc + val)\n                      )}\n                    </b>\n                  </p>\n                ) : (\n                  \"\"\n                )}\n                {props.gameParameters.timerParameter > 0 ? (\n                  <p>\n                    <b>\n                      average time:{\" \"}\n                      {convertTime(\n                        player.answers\n                          .map((answer) => answer.duration)\n                          .reduce((acc, val) => acc + val) /\n                          player.answers.length\n                      )}\n                    </b>\n                  </p>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Score;\n"]},"metadata":{},"sourceType":"module"}
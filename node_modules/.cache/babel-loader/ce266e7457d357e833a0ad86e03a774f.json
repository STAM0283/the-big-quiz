{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/Lyon-js-202005-project-the-big-quizz/src/components/SelectParameters.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // import { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nfunction SelectParameters(props) {\n  //  console.log(\"props de SelectParameters:\",props);\n  const [lstCategories, setLstCategories] = useState([]); //recupération de l'API catégory\n\n  useEffect(() => {\n    let configAPI = {\n      method: \"get\",\n      url: \"https://opentdb.com/api_category.php\"\n    };\n    axios(configAPI).then(response => {\n      setLstCategories(response.data.trivia_categories);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); //changement au select :\n\n  function handleLevel(event) {\n    props.gameParameters.setDifficultyLevel(event.target.value);\n  }\n\n  function handleCategory(event) {\n    props.gameParameters.setCategory(event.target.value);\n  }\n\n  function handleTimer(event) {\n    props.gameParameters.setTimerParameter(event.target.value);\n  }\n\n  function handleNbQuestionsPerPlayer(event) {\n    props.gameParameters.setNbQuestionsPerPlayer(event.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nbQuestions\",\n    className: \"player-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Numbers of questions per player: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-style\",\n    type: \"number\",\n    id: \"nbQuestions\",\n    name: \"nbQuestions\",\n    min: \"5\",\n    max: props.gameParameters.maxQuestionsPerPlayer,\n    value: props.gameParameters.nbQuestionsPerPlayer,\n    onChange: handleNbQuestionsPerPlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"selectCategory\",\n    className: \"player-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \" Category : \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"selectCategory\",\n    className: \"input-style\",\n    onChange: event => handleCategory(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    className: \"input-style\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  }, \"Any\"), lstCategories.map(item => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: item.id,\n      value: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, item.name, \" \");\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"selectDifficultyLevel\",\n    className: \"player-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Difficulty level : \"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"input-style\",\n    id: \"selectDifficultyLevel\",\n    onChange: event => handleLevel(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    className: \"input-style\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Any\"), /*#__PURE__*/React.createElement(\"option\", {\n    className: \"input-style\",\n    value: \"easy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \" Easy \"), /*#__PURE__*/React.createElement(\"option\", {\n    className: \"input-style\",\n    value: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \" Medium \"), /*#__PURE__*/React.createElement(\"option\", {\n    className: \"input-style\",\n    value: \"hard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \" Hard \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"selectTimer\",\n    className: \"player-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Timer :\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"input-style\",\n    id: \"selectTimer\",\n    onChange: handleTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: -1,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 5,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"5\\u2033\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 10,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \" 10\\u2033 \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 15,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \" 15\\u2033 \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 20,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \" 20\\u2033 \"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 30,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \" 30\\u2033\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 40,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \" 40\\u2033\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 50,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \" 50\\u2033\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 60,\n    className: \"input-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \" 60\\u2033\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Type of Questions :\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-style\",\n    type: \"radio\",\n    id: \"anyType\",\n    name: \"typeOfQuestions\",\n    onChange: () => props.gameParameters.setQuestionsType(\"\"),\n    checked: props.gameParameters.questionsType === \"\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"player-info\",\n    htmlFor: \"anyType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Any type\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-style\",\n    type: \"radio\",\n    id: \"boolean\",\n    name: \"typeOfQuestions\",\n    onChange: () => props.gameParameters.setQuestionsType(\"boolean\"),\n    checked: props.gameParameters.questionsType === \"boolean\",\n    value: \"boolean\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"boolean\",\n    className: \"player-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"True / False\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-style\",\n    type: \"radio\",\n    id: \"multiple\",\n    name: \"typeOfQuestions\",\n    onChange: () => props.gameParameters.setQuestionsType(\"multiple\"),\n    checked: props.gameParameters.questionsType === \"multiple\",\n    value: \"multiple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"multiple\",\n    className: \"player-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Multiple choice\"))));\n}\n\nexport default SelectParameters;","map":{"version":3,"sources":["/home/wilder/Documents/Lyon-js-202005-project-the-big-quizz/src/components/SelectParameters.jsx"],"names":["React","useState","useEffect","axios","SelectParameters","props","lstCategories","setLstCategories","configAPI","method","url","then","response","data","trivia_categories","catch","error","console","log","handleLevel","event","gameParameters","setDifficultyLevel","target","value","handleCategory","setCategory","handleTimer","setTimerParameter","handleNbQuestionsPerPlayer","setNbQuestionsPerPlayer","maxQuestionsPerPlayer","nbQuestionsPerPlayer","map","item","id","name","setQuestionsType","questionsType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// import { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n\nfunction SelectParameters(props) {\n  //  console.log(\"props de SelectParameters:\",props);\n\n  const [lstCategories, setLstCategories] = useState([]);\n\n  //recupération de l'API catégory\n  useEffect(() => {\n    let configAPI = {\n      method: \"get\",\n      url: \"https://opentdb.com/api_category.php\",\n    };\n    axios(configAPI)\n      .then((response) => {\n        setLstCategories(response.data.trivia_categories);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  //changement au select :\n  function handleLevel(event) {\n    props.gameParameters.setDifficultyLevel(event.target.value);\n  }\n  function handleCategory(event) {\n    props.gameParameters.setCategory(event.target.value);\n  }\n  function handleTimer(event) {\n    props.gameParameters.setTimerParameter(event.target.value);\n  }\n  function handleNbQuestionsPerPlayer(event) {\n    props.gameParameters.setNbQuestionsPerPlayer(event.target.value);\n  }\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"nbQuestions\" className=\"player-info\">Numbers of questions per player: </label>\n        <input\n          className=\"input-style\"\n          type=\"number\"\n          id=\"nbQuestions\"\n          name=\"nbQuestions\"\n          min=\"5\"\n          max={props.gameParameters.maxQuestionsPerPlayer}\n          value={props.gameParameters.nbQuestionsPerPlayer}\n          onChange={handleNbQuestionsPerPlayer}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"selectCategory\" className=\"player-info\"> Category : </label>\n        <select id=\"selectCategory\" className=\"input-style\" onChange={(event) => handleCategory(event)}>\n       <option className=\"input-style\" value=\"\">Any</option>\n          {lstCategories.map((item) => {\n            return (\n              <option key={item.id} value={item.id}>\n                {item.name}{\" \"}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"selectDifficultyLevel\" className=\"player-info\">Difficulty level : </label>\n        <select\n          className=\"input-style\"\n          id=\"selectDifficultyLevel\"\n          onChange={(event) => handleLevel(event)}\n        >\n          <option className=\"input-style\" value=\"\">Any</option>\n          <option className=\"input-style\" value=\"easy\"> Easy </option>\n          <option className=\"input-style\" value=\"medium\"> Medium </option>\n          <option className=\"input-style\" value=\"hard\"> Hard </option>\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"selectTimer\" className=\"player-info\">Timer :</label>\n        <select className=\"input-style\" id=\"selectTimer\" onChange={handleTimer}>\n          <option value={-1} className=\"input-style\">None</option>\n          <option value={5} className=\"input-style\">5″</option>\n          <option value={10} className=\"input-style\"> 10″ </option>\n          <option value={15} className=\"input-style\"> 15″ </option>\n          <option value={20} className=\"input-style\"> 20″ </option>\n          <option value={30} className=\"input-style\"> 30″</option>\n          <option value={40} className=\"input-style\"> 40″</option>\n          <option value={50} className=\"input-style\"> 50″</option>\n          <option value={60} className=\"input-style\"> 60″</option>\n        </select>\n      </div>\n      <div>\n        <span className=\"player-info\">Type of Questions :</span>\n        <p>\n        <input\n          className=\"input-style\"\n          type=\"radio\"\n          id=\"anyType\"\n          name=\"typeOfQuestions\"\n          onChange={() => props.gameParameters.setQuestionsType(\"\")}\n          checked={props.gameParameters.questionsType === \"\"}\n          value=\"\"\n        />\n        <label className=\"player-info\" htmlFor=\"anyType\">Any type</label>\n\n        <input\n          className=\"input-style\"\n          type=\"radio\"\n          id=\"boolean\"\n          name=\"typeOfQuestions\"\n          onChange={() => props.gameParameters.setQuestionsType(\"boolean\")}\n          checked={props.gameParameters.questionsType === \"boolean\"}\n          value=\"boolean\"\n        />\n        <label htmlFor=\"boolean\" className=\"player-info\">True / False</label>\n\n        <input\n          className=\"input-style\"\n          type=\"radio\"\n          id=\"multiple\"\n          name=\"typeOfQuestions\"\n          onChange={() => props.gameParameters.setQuestionsType(\"multiple\")}\n          checked={props.gameParameters.questionsType === \"multiple\"}\n          value=\"multiple\"\n        />\n        <label htmlFor=\"multiple\" className=\"player-info\">Multiple choice</label>\n        </p>\n      </div>\n\n    </div>\n  );\n}\n\nexport default SelectParameters;\n"]},"metadata":{},"sourceType":"module"}
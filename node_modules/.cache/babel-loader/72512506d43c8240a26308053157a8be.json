{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/Lyon-js-202005-project-the-big-quizz/src/components/QuestionOfTheDay.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport \"./../App.css\";\nimport { Card, CardTitle, CardText, Row, Col } from \"reactstrap\";\n\nconst QuestionOfTheDay = props => {\n  const [categorys, setcategorys] = useState(\"\");\n  const [types, setType] = useState(\"\");\n  const [difficultys, setDifficultys] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [goodAnswer, setGoodAnswer] = useState(\"\");\n  const [wrongAnswer, setWrongAnswer] = useState(\"\");\n  const [modalWrongIsOpen, setModelIsOpen] = useState(false);\n  const [modalGoodIsOpen, setModalGoodIsOpen] = useState(false);\n  const regTest = categorys.replace(/[^\\w\\s]/gi, '');\n  const okespace = regTest.replace(/ /g, \"\");\n  console.log(okespace);\n  const divStyle = {\n    backgroundImage: `url(\"/${okespace}.jpg\")`,\n    backgroundSize: 'cover'\n  };\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api.php?amount=50\").then(response => {\n      let myId = Math.floor(Math.random() * 50);\n      setcategorys(response.data.results[myId].category);\n      setType(response.data.results[myId].type);\n      setDifficultys(response.data.results[myId].difficulty);\n      setQuestions(response.data.results[myId].question);\n      setGoodAnswer(response.data.results[myId].correct_answer);\n      setWrongAnswer(response.data.results[myId].incorrect_answers);\n    });\n  }, []);\n\n  function randomize(tab) {\n    let i, j, tmp;\n\n    for (i = tab.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      tmp = tab[i];\n      tab[i] = tab[j];\n      tab[j] = tmp;\n    }\n\n    return tab;\n  }\n\n  let tab = [\"btnRandom0\", \"btnRandom1\", \"btnRandom2\", \"btnRandom3\"];\n  tab = randomize(tab);\n  let tabForTwo = [\"btnRandom0\", \"btnRandom1\"];\n  tabForTwo = randomize(tabForTwo);\n  let answer = \"answer\";\n  let btnRandom0 = tab[0];\n  let btnRandom1 = tab[1];\n  let btnRandom2 = tab[2];\n  let btnRandom3 = tab[3];\n  let btnRandom0Two = tabForTwo[0];\n  let btnRandom1Two = tabForTwo[1];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: divStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalWrongIsOpen,\n    aria: {\n      labelledby: \"heading\",\n      describedby: \"full_description\"\n    },\n    style: {\n      content: {\n        backgroundColor: \"#FC2622\",\n        width: \"30%\",\n        height: \"20%\",\n        textAlign: \"center\",\n        fontSize: \"x-large\",\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"modal-answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Uncorrect answer\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModelIsOpen(false),\n    style: {\n      backgroundColor: \"#FFE74C\",\n      width: \"90px\",\n      height: \"50px\",\n      borderRadius: \"5px\",\n      fontSize: \"x-large\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalGoodIsOpen,\n    style: {\n      content: {\n        backgroundColor: \"#BBFD5D\",\n        width: \"30%\",\n        height: \"20%\",\n        textAlign: \"center\",\n        fontSize: \"x-large\",\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"modal-answer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Correct answer\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalGoodIsOpen(false),\n    style: {\n      backgroundColor: \"blue\",\n      width: \"90px\",\n      height: \"50px\",\n      borderRadius: \"5px\",\n      fontSize: \"x-large\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: {\n      size: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardText, {\n    className: \"daily-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Question Of The Day\"), /*#__PURE__*/React.createElement(CardTitle, {\n    className: \"question-style\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: questions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"question-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, \"Question category: \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"category-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, categorys), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Level :\"), difficultys === \"hard\" ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"question-category\",\n    style: {\n      color: \"#FF0921\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 41\n    }\n  }, \" \", difficultys, \" \") : difficultys === \"medium\" ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"question-category\",\n    style: {\n      color: \"#dc7f9b\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 44\n    }\n  }, \" \", difficultys, \" \") : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"question-category\",\n    style: {\n      color: \"#f6b83c\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 18\n    }\n  }, \" \", difficultys, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"12\",\n    md: {\n      size: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bordureCardReponse\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, types !== \"boolean\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModelIsOpen(true),\n    className: `${btnRandom0}   ${answer}`,\n    style: {\n      backgroundColor: \"#FDF1D8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: wrongAnswer[0]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalGoodIsOpen(true),\n    className: `${btnRandom1}   ${answer}`,\n    style: {\n      backgroundColor: \"#E3CACD\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: goodAnswer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModelIsOpen(true),\n    className: `${btnRandom2}   ${answer}`,\n    style: {\n      backgroundColor: \"#D1C2EB\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: wrongAnswer[2]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModelIsOpen(true),\n    className: `${btnRandom3}   ${answer}`,\n    style: {\n      backgroundColor: \"#E0B5E3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: wrongAnswer[1]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModelIsOpen(true),\n    className: `${btnRandom0Two}   ${answer}`,\n    style: {\n      backgroundColor: \"#E0B5E3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: wrongAnswer[0]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalGoodIsOpen(true),\n    className: `${btnRandom1Two}   ${answer}`,\n    style: {\n      backgroundColor: \"#D1C2EB\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: goodAnswer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 22\n    }\n  })))))))));\n};\n\nexport default QuestionOfTheDay;","map":{"version":3,"sources":["/home/wilder/Documents/Lyon-js-202005-project-the-big-quizz/src/components/QuestionOfTheDay.jsx"],"names":["React","useState","useEffect","Modal","axios","Card","CardTitle","CardText","Row","Col","QuestionOfTheDay","props","categorys","setcategorys","types","setType","difficultys","setDifficultys","questions","setQuestions","goodAnswer","setGoodAnswer","wrongAnswer","setWrongAnswer","modalWrongIsOpen","setModelIsOpen","modalGoodIsOpen","setModalGoodIsOpen","regTest","replace","okespace","console","log","divStyle","backgroundImage","backgroundSize","get","then","response","myId","Math","floor","random","data","results","category","type","difficulty","question","correct_answer","incorrect_answers","randomize","tab","i","j","tmp","length","tabForTwo","answer","btnRandom0","btnRandom1","btnRandom2","btnRandom3","btnRandom0Two","btnRandom1Two","labelledby","describedby","content","backgroundColor","width","height","textAlign","fontSize","position","left","top","transform","borderRadius","size","offset","__html","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\nimport \"./../App.css\";\nimport { Card, CardTitle, CardText, Row, Col } from \"reactstrap\";\n\nconst QuestionOfTheDay = (props) => {\n  const [categorys, setcategorys] = useState(\"\");\n  const [types, setType] = useState(\"\");\n  const [difficultys, setDifficultys] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [goodAnswer, setGoodAnswer] = useState(\"\");\n  const [wrongAnswer, setWrongAnswer] = useState(\"\");\n  const [modalWrongIsOpen, setModelIsOpen] = useState(false);\n  const [modalGoodIsOpen, setModalGoodIsOpen] = useState(false);\n\n  const regTest = categorys.replace(/[^\\w\\s]/gi, '');\n  const okespace = regTest.replace(/ /g, \"\");\n  console.log(okespace);\n\n  const divStyle = {\n    backgroundImage: `url(\"/${okespace}.jpg\")` ,\n    backgroundSize: 'cover'\n  }\n  \n\n\n\n\n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api.php?amount=50\").then((response) => {\n      let myId = Math.floor(Math.random() * 50);\n      setcategorys(response.data.results[myId].category);\n      setType(response.data.results[myId].type);\n      setDifficultys(response.data.results[myId].difficulty);\n      setQuestions(response.data.results[myId].question);\n      setGoodAnswer(response.data.results[myId].correct_answer);\n      setWrongAnswer(response.data.results[myId].incorrect_answers);\n    });\n  }, []);\n\n  function randomize(tab) {\n    let i, j, tmp;\n    for (i = tab.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      tmp = tab[i];\n      tab[i] = tab[j];\n      tab[j] = tmp;\n    }\n    return tab;\n  }\n  let tab = [\"btnRandom0\", \"btnRandom1\", \"btnRandom2\", \"btnRandom3\"];\n  tab = randomize(tab);\n \n  let tabForTwo = [\"btnRandom0\", \"btnRandom1\"];\n  tabForTwo = randomize(tabForTwo);\n  let answer = \"answer\";\n\n  let btnRandom0 = tab[0];\n  let btnRandom1 = tab[1];\n  let btnRandom2 = tab[2];\n  let btnRandom3 = tab[3];\n\n  let btnRandom0Two =  tabForTwo[0];\n  let btnRandom1Two =  tabForTwo[1];\n\n\n  return (\n    <div style={divStyle}>\n    <div>\n      <Modal\n        isOpen={modalWrongIsOpen}\n        aria={{\n          labelledby: \"heading\",\n          describedby: \"full_description\"\n        }}\n        style={{\n          content: {\n            backgroundColor: \"#FC2622\",\n            width: \"30%\",\n            height: \"20%\",\n            textAlign: \"center\",\n            fontSize: \"x-large\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          },\n        }}\n      >\n        <h2 className=\"modal-answer\">Uncorrect answer</h2>\n        <button\n          onClick={() => setModelIsOpen(false)}\n          style={{\n            backgroundColor: \"#FFE74C\",\n            width: \"90px\",\n            height: \"50px\",\n            borderRadius: \"5px\",\n            fontSize: \"x-large\",\n          }}\n        >\n          Close\n        </button>\n      </Modal>\n      <Modal\n        isOpen={modalGoodIsOpen}\n        style={{\n          content: {\n            backgroundColor: \"#BBFD5D\",\n            width: \"30%\",\n            height: \"20%\",\n            textAlign: \"center\",\n            fontSize: \"x-large\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n          },\n        }}\n      >\n        <h2 className=\"modal-answer\">Correct answer</h2>\n        <button\n          onClick={() => setModalGoodIsOpen(false)}\n          style={{\n            backgroundColor: \"blue\",\n            width: \"90px\",\n            height: \"50px\",\n            borderRadius: \"5px\",\n            fontSize: \"x-large\",\n          }}\n        >\n          Close\n        </button>\n      </Modal>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Card className=\"test\">\n            <CardText className=\"daily-question\">Question Of The Day</CardText>\n            <CardTitle className=\"question-style\">\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: questions,\n                }}\n              ></span>\n            </CardTitle>\n            <br />\n            <p className=\"question-category\">Question category: </p>\n            <p className=\"category-name\">{categorys}</p>\n            <p>Level :</p>\n\n             { difficultys === \"hard\" ? <p className=\"question-category\" style={{color: \"#FF0921\"}} > {difficultys} </p>\n              : difficultys === \"medium\" ? <span className=\"question-category\" style={{color:\"#dc7f9b\"}}> {difficultys} </span>\n                :<span className=\"question-category\" style={{color: \"#f6b83c\"} }> {difficultys} </span>\n          \n            }\n\n            <br />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <Card >\n          <div className=\"bordureCardReponse\"> \n            {/* TeRnaire pour affichage reponse soit true/false soit choix multiple*/}\n            {types !== \"boolean\" ? (\n              <>\n                \n                  <button\n                    onClick={() => setModelIsOpen(true)}\n\n                    className={`${btnRandom0}   ${answer}`}\n                    style={{ backgroundColor: \"#FDF1D8\" }}\n\n                  >\n                    {\" \"}\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: wrongAnswer[0],\n                      }}\n                    ></span>\n                  </button>\n                  <button\n                    onClick={() => setModalGoodIsOpen(true)}\n\n                    className={`${btnRandom1}   ${answer}`}\n                    style={{ backgroundColor: \"#E3CACD\" }}\n\n                  >\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: goodAnswer,\n                      }}\n                    ></span>\n                  </button>\n                \n                \n                  <button\n                    onClick={() => setModelIsOpen(true)}\n                    className={`${btnRandom2}   ${answer}`}\n                    style={{ backgroundColor: \"#D1C2EB\" }}\n                  >\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: wrongAnswer[2],\n                      }}\n                    ></span>\n                  </button>\n                  <button\n                    onClick={() => setModelIsOpen(true)}\n                    className={`${btnRandom3}   ${answer}`}\n                    style={{ backgroundColor: \"#E0B5E3\" }}\n                  >\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: wrongAnswer[1],\n                      }}\n                    ></span>\n                  </button>\n                \n              </>\n            ) : (\n              <>\n                  <button\n                    onClick={() => setModelIsOpen(true)}\n                    className={`${btnRandom0Two}   ${answer}`}\n                    style={{ backgroundColor: \"#E0B5E3\" }}\n                  >\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: wrongAnswer[0],\n                      }}\n                    ></span>\n                  </button>\n                  <button\n                    onClick={() => setModalGoodIsOpen(true)}\n                    className={`${btnRandom1Two}   ${answer}`}\n                    style={{ backgroundColor: \"#D1C2EB\" }}\n                  >\n                     <span\n                      dangerouslySetInnerHTML={{\n                        __html: goodAnswer,\n                      }}\n                    ></span>\n                  </button>\n              </>\n            )}\n            {/*Fin TeRnaire*/}\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n    </div>\n  );\n};\n\nexport default QuestionOfTheDay;\n"]},"metadata":{},"sourceType":"module"}